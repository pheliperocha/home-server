homeassistant:
  name: homeassistant
  localHostname: homeassistant.local
  publicHostname: homeassistant.pheliperocha.com
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}
  tunnel:
    cloudflare_name: home_assistant

nodered:
  name: nodered
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}

drone:
  name: drone
  tunnel:
    cloudflare_name: drone
  hostAliases: []
  image:
    registry: docker.io
    repository: drone/drone
    tag: 2.12.1
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  nameOverride: drone
  fullnameOverride: drone
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  automountServiceAccountToken: false
  podSecurityContext: {}
  securityContext: {}
  podAnnotations: {}
  updateStrategy: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
    nodePort: 32132
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraVolumes: []
  extraVolumeMounts: []
  extraContainers: []
  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim: ""
    mountPath: /data
    size: 8Gi
    storageClass: ""
    volumeMode: ""
    subPath: ""
  emptyDir:
    sizeLimit: ""
  extraSecretNamesForEnvFrom: []
  env:
    DRONE_LOGS_DEBUG: true
    DRONE_LOGS_TRACE: true
    DRONE_SERVER_HOST: drone.pheliperocha.com
    DRONE_SERVER_PROTO: https
    DRONE_USER_FILTER: pheliperocha

drone-runner-docker:
  hostAliases: []
  replicaCount: 1
  image:
    registry: docker.io
    repository: drone/drone-runner-docker
    pullPolicy: IfNotPresent
    tag: 1.8.1
  extraVolumes:
    - name: storage
      emptyDir: {}
  extraVolumeMounts: []
  dind:
    registry: docker.io
    repository: docker
    tag: 20-dind
    pullPolicy: IfNotPresent
    command:
      - "dockerd"
    commandArgs:
      - "--host"
      - "tcp://localhost:2375"
    securityContext:
      privileged: true
    extraVolumeMounts:
      - name: storage
        mountPath: /var/lib/docker
        subPath: docker
    resources:
      {}
  gc:
    enabled: true
    registry: docker.io
    repository: drone/gc
    tag: 1.0.0
    pullPolicy: IfNotPresent
    securityContext:
      {}
    env:
      GC_DEBUG: false
      GC_DEBUG_COLOR: "false"
      GC_DEBUG_PRETTY: "false"
      GC_IGNORE_IMAGES: ""
      GC_IGNORE_CONTAINERS: ""
      GC_INTERVAL: "5m"
      GC_CACHE: "5gb"
    resources:
      {}
  imagePullSecrets: []
  terminationGracePeriodSeconds: 3600
  nameOverride: drone-runner
  fullnameOverride: drone-runner
  serviceAccount:
    create: true
    annotations: {}
  podAnnotations: {}
  podSecurityContext:
    {}
  securityContext:
    {}
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: false
    className: ""
    annotations:
      {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  resources:
    {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraSecretNamesForEnvFrom: []
  env:
    DRONE_DEBUG: true
    DRONE_TRACE: true
    DOCKER_HOST: "tcp://localhost:2375"
    DRONE_RPC_HOST: drone.pheliperocha.com
    DRONE_RPC_PROTO: https
    DRONE_NAMESPACE_DEFAULT: home-server
