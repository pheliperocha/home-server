homeassistant:
  name: homeassistant
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}

nodered:
  name: nodered
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}

drone:
  hostAliases: []
  image:
    registry: docker.io
    repository: drone/drone
    tag: 2.12.1
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  nameOverride: drone
  fullnameOverride: drone
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  automountServiceAccountToken: false
  podSecurityContext: {}
  securityContext: {}
  podAnnotations: {}
  updateStrategy: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
    nodePort: 32132
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraVolumes: []
  extraVolumeMounts: []
  extraContainers: []
  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim: ""
    mountPath: /data
    size: 8Gi
    storageClass: ""
    volumeMode: ""
    subPath: ""
  emptyDir:
    sizeLimit: ""
  extraSecretNamesForEnvFrom: []
  env:
    DRONE_LOGS_DEBUG: true
    DRONE_LOGS_TRACE: true
    DRONE_SERVER_HOST: xxx # Use proper hostname
    DRONE_SERVER_PROTO: https
    DRONE_RPC_SECRET: xxx # Use random secret
    DRONE_GITHUB_CLIENT_ID: xxx # TODO: Use from secrets
    DRONE_GITHUB_CLIENT_SECRET: xxx # TODO: Use from secrets
    DRONE_USER_FILTER: xxx # TODO: Use user filter