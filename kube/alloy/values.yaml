alloy:
  enabled: false
  name: alloy
  alloy:
    configMap:
      content: |-
        // Write your Alloy config here:
        logging {
          level = "info"
          format = "logfmt"
        }

        // Define Loki write endpoint
        loki.write "default" {
          endpoint {
            url = "http://loki-gateway/loki/api/v1/push"
          }
        }

        // Discover local system logs
        local.file_match "node_logs" {
          path_targets = [{
              __path__  = "/var/log/syslog",
              job       = "node/syslog",
              node_name = sys.env("HOSTNAME"),
              cluster   = "minikube",
          }]
        }

        // Read system logs and forward to Loki
        loki.source.file "node_logs" {
          targets    = local.file_match.node_logs.targets
          forward_to = [loki.write.default.receiver]
        }

        // Kubernetes pod discovery
        discovery.kubernetes "pod" {
          role = "pod"
        }

        // Kubernetes relabeling with optimizations
        discovery.relabel "pod_logs" {
          targets = discovery.kubernetes.pod.targets

          rule {
            source_labels = ["__meta_kubernetes_namespace"]
            action = "replace"
            target_label = "namespace"
          }

          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            action = "replace"
            target_label = "pod"
          }

          rule {
            source_labels = ["__meta_kubernetes_pod_container_name"]
            action = "replace"
            target_label = "container"
          }

          rule {
            source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
            action = "replace"
            target_label = "app"
          }

          rule {
            source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
            action = "replace"
            target_label = "job"
            separator = "/"
            replacement = "$1"
          }

          rule {
            source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
            action = "replace"
            target_label = "__path__"
            separator = "/"
            replacement = "/var/log/pods/*$1/*.log"
          }

          rule {
            source_labels = ["__meta_kubernetes_pod_container_id"]
            action = "replace"
            target_label = "container_runtime"
            regex = "^(\\S+):\\/\\/.+$"
            replacement = "$1"
          }
        }

        // Read Kubernetes logs
        loki.source.kubernetes "pod_logs" {
          targets    = discovery.relabel.pod_logs.output
          forward_to = [loki.process.pod_logs.receiver]
        }

        // Process logs with static labels
        loki.process "pod_logs" {
          stage.static_labels {
              values = {
                cluster = "minikube",
              }
          }

          forward_to = [loki.write.default.receiver]
        }

        // Kubernetes event logging
        loki.source.kubernetes_events "cluster_events" {
          job_name   = "integrations/kubernetes/eventhandler"
          log_format = "logfmt"
          forward_to = [
            loki.process.cluster_events.receiver,
          ]
        }

        // Process Kubernetes events
        loki.process "cluster_events" {
          forward_to = [loki.write.default.receiver]

          stage.static_labels {
            values = {
              cluster = "minikube",
            }
          }

          stage.labels {
            values = {
              kubernetes_cluster_events = "job",
            }
          }
        }
