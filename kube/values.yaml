homeassistant:
  enabled: true
  name: homeassistant
  localHostname: homeassistant.local
  publicHostname: homeassistant.pheliperocha.com
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}
  tunnel:
    enabled: true
    cloudflare_name: home_assistant

nodered:
  enabled: true
  name: nodered
  localHostname: nodered.local
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}

drone_launcher:
  enabled: true
  name: drone-launcher
  port: 80
  publicHostname: drone.pheliperocha.com
  localHostname: drone.local
  tunnel:
    enabled: true
    cloudflare_name: drone

qbittorrent:
  enabled: true
  name: qbittorrent
  localHostname: qbittorrent.local
  replicaCount: 1
  serviceAccount:
    annotations: {}

kubernetesDashboard:
  enabled: true
  name: kubernetes-dashboard
  localHostname: k8s.local

k8up:
  enabled: true
  backend:
    s3:
      endpoint: https://s3.sa-east-1.amazonaws.com
      bucket: home-server-backups
      accessKeyIDSecretRef:
        name: k8up-secrets
        key: AWS_ACCESS_KEY_ID
      secretAccessKeySecretRef:
        name: k8up-secrets
        key: AWS_SECRET_ACCESS_KEY
    repoPasswordSecretRef:
      name: k8up-secrets
      key: RESTIC_REPOSITORY_PASSWORD

# Used for local testing
minio:
  enabled: false
  persistence:
    annotations:
      k8up.io/backup: "false"

nfs:
  enabled: true

kuma:
  enabled: true
  name: kuma
  localHostname: kuma.local
  publicHostname: kuma.pheliperocha.com
  port: 3001
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}
  tunnel:
    enabled: true
    cloudflare_name: kuma

ntfy:
  enabled: true
  name: ntfy-v2
  localHostname: ntfy.local
  publicHostname: ntfy.pheliperocha.com
  port: 80
  replicaCount: 1
  volumePath: /etc/ntfy
  serviceAccount:
    create: true
    annotations: {}
  tunnel:
    enabled: true
    cloudflare_name: ntfy

atuin:
  enabled: true
  name: atuin
  localHostname: atuin.local
  port: 8888
  replicaCount: 1
  openRegistration: true

# TODO: Use helmfile to have a different release for finance-project-staging
pg-finance-project-staging:
  enabled: true
  auth:
    database: fp_staging
  primary:
    persistence:
      annotations:
        k8up.io/backup: "false"

# TODO: Use helmfile to have a different release for finance-project-production
pg-finance-project-production:
  enabled: true
  auth:
    database: fp_production
  primary:
    podAnnotations:
      k8up.io/backupcommand: sh -c 'PGPASSWORD=$POSTGRES_PASSWORD PGDATABASE="$POSTGRES_DB" pg_dump -U postgres --clean'
      k8up.io/fileExtension: "pg-finance-project-production.sql"
    persistence:
      annotations:
        k8up.io/backup: "false"

pg-atuin:
  enabled: true
  auth:
    database: atuin
  primary:
    podAnnotations:
      k8up.io/backupcommand: sh -c 'PGPASSWORD=$POSTGRES_PASSWORD PGDATABASE="$POSTGRES_DB" pg_dump -U postgres --clean'
      k8up.io/fileExtension: "pg-atuin.sql"
    persistence:
      annotations:
        k8up.io/backup: "false"