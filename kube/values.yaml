homeassistant:
  enabled: true
  name: homeassistant
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}
  use_local_mount: false
  ingress:
    enabled: true
    localHostname: homeassistant.home.pheliperocha.com
  tunnel:
    enabled: true
    cloudflare_name: home_assistant
    publicHostname: homeassistant.pheliperocha.com

nodered:
  enabled: true
  name: nodered
  replicaCount: 1
  serviceAccount:
    create: true
    annotations: {}
  ingress:
    enabled: true
    localHostname: nodered.home.pheliperocha.com

qbittorrent:
  enabled: false
  name: qbittorrent
  localHostname: qbittorrent.home.pheliperocha.com
  replicaCount: 0
  serviceAccount:
    annotations: {}

kubernetesDashboard:
  name: kubernetes-dashboard
  ingress:
    enabled: true
    localHostname: k8s.home.pheliperocha.com

ingress:
  loadBalancer:
    enabled: true
  certificate:
    enabled: true # This indicate if the ingress TLS should be managed by cert-manager
    clusterIssuerRef: letsencrypt-production # This indicates which cluster issuer to use for the ingress TLS

k8up:
  enabled: true
  scheduleBackup: true
  backend:
    s3:
      endpoint: https://s3.sa-east-1.amazonaws.com
      bucket: home-server-backups
      accessKeyIDSecretRef:
        name: k8up-secrets
        key: AWS_ACCESS_KEY_ID
      secretAccessKeySecretRef:
        name: k8up-secrets
        key: AWS_SECRET_ACCESS_KEY
    repoPasswordSecretRef:
      name: k8up-secrets
      key: RESTIC_REPOSITORY_PASSWORD

# Used for local testing
minio:
  enabled: false
  persistence:
    annotations:
      k8up.io/backup: "false"

nfs:
  enabled: false

ntfy:
  enabled: true
  name: ntfy
  port: 80
  replicaCount: 1
  volumePath: /etc/ntfy
  serviceAccount:
    create: true
    annotations: {}
  ingress:
    enabled: true
    localHostname: ntfy.home.pheliperocha.com
  tunnel:
    enabled: true
    cloudflare_name: ntfy
    publicHostname: ntfy.pheliperocha.com

# TODO: Use helmfile to have a different release for finance-project-staging
pg-finance-project-staging:
  enabled: true
  auth:
    database: fp_staging
  primary:
    persistence:
      annotations:
        k8up.io/backup: "false"

# TODO: Use helmfile to have a different release for finance-project-production
pg-finance-project-production:
  enabled: true
  auth:
    database: fp_production
  primary:
    podAnnotations:
      k8up.io/backupcommand: sh -c 'PGPASSWORD=$POSTGRES_PASSWORD PGDATABASE="$POSTGRES_DB" pg_dump -U postgres --clean'
      k8up.io/file-extension: "-pg-finance-project-production.sql"
    persistence:
      annotations:
        k8up.io/backup: "false"

pg-homeassistant:
    enabled: true
    auth:
      database: homeassistant
    primary:
      podAnnotations:
        k8up.io/backupcommand: sh -c 'PGPASSWORD=$POSTGRES_PASSWORD PGDATABASE="$POSTGRES_DB" pg_dump -U postgres --clean'
        k8up.io/file-extension: "-pg-homeassistant.sql"
      persistence:
        annotations:
          k8up.io/backup: "false"
