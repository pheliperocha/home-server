{{- if .Values.pihole.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.pihole.name }}
  labels:
    {{- include "pihole.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.pihole.replicaCount }}
  selector:
    matchLabels:
      {{- include "pihole.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pihole.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Values.pihole.name }}
          image: pihole/pihole:2024.07.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /admin
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: dns
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: TZ
              value: "{{ .Values.pihole.timezone }}"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: WEBPASSWORD
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: https
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.pihole.name }}-persistent-volume
              mountPath: /etc/pihole
      volumes:
        - name: {{ .Values.pihole.name }}-persistent-volume
          persistentVolumeClaim:
            claimName: {{ .Values.pihole.name }}-pv-claim
{{- end }}
