{{- if .Values.drone_launcher.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.drone_launcher.name }}
  labels:
    {{- include "drone_launcher.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.drone_launcher.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.drone_launcher.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.drone_launcher.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.drone_launcher.name }}-serviceaccount
      imagePullSecrets:
        - name: docker-registry-credentials
      containers:
      - name: {{ .Values.drone_launcher.name }}
        image: pheliperocha/home-server:drone-launcher-v2.1.0
        imagePullPolicy: Always
        command: # TODO: Run the drone launcher nodejs app
        - /bin/sh
        - -c
        - node ./dist/main.js
        ports:
          - name: http
            containerPort: {{ .Values.drone_launcher.port }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 20
          periodSeconds: 60
          failureThreshold: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 20
          periodSeconds: 60
          failureThreshold: 5
          timeoutSeconds: 10
        env:
          - name: PORT
            value: "{{ .Values.drone_launcher.port }}"
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: TOKEN
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: GIT_TOKEN
          - name: WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: WEBHOOK_SECRET
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: AWS_SECRET_ACCESS_KEY
          - name: NTFY_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.drone_launcher.name }}-secrets"
                key: NTFY_TOKEN
{{- end }}