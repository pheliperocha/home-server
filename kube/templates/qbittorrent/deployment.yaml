apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.qbittorrent.name }}
  labels:
    {{- include "qbittorrent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.qbittorrent.replicaCount }}
  selector:
    matchLabels:
      {{- include "qbittorrent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "qbittorrent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.qbittorrent.name }}
      restartPolicy: Always
      containers:
        - name: {{ .Values.qbittorrent.name }}
          image: "lscr.io/linuxserver/qbittorrent:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: tcp-torrent
              containerPort: 6881
              protocol: TCP
            - name: udp-torrent
              containerPort: 6881
              protocol: UDP
          env:
            - name: TZ
              value: America/Sao_Paulo
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: WEBUI_PORT
              value: "8080"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /config
              name: {{ .Values.qbittorrent.name }}-config-persistent-volume
            - mountPath: /downloads
              name: nfs-media-pvc
      volumes:
        - name: {{ .Values.qbittorrent.name }}-config-persistent-volume
          persistentVolumeClaim:
            claimName: {{ .Values.qbittorrent.name }}-config-pv-claim
        - name: nfs-media-pvc
          persistentVolumeClaim:
            claimName: nfs-media-pvc