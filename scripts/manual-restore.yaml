### 1. Set Envs
# export RESTIC_REPOSITORY=s3:https://s3.sa-east-1.amazonaws.com/home-server-backups
# export RESTIC_PASSWORD=$(kubectl get secrets -n home-server k8up-secrets -o jsonpath="{.data.RESTIC_REPOSITORY_PASSWORD}" | base64 -d)
# export AWS_ACCESS_KEY_ID=$(kubectl get secrets -n home-server k8up-secrets -o jsonpath="{.data.AWS_ACCESS_KEY_ID}" | base64 -d)
# export AWS_SECRET_ACCESS_KEY=$(kubectl get secrets -n home-server k8up-secrets -o jsonpath="{.data.AWS_SECRET_ACCESS_KEY}" | base64 -d)

### 2. Update SNAPSHOT_ID
# restic snapshots --latest 1
# restic snapshots --json --latest 1 --path /data/nodered-pv-claim | jq -r '.[0].id'

### 3. Update PVC_NAME
# kubectl get pvc -n home-server

### 4. Execute manunal-restore
# kubectl apply -f ./scripts/manual-restore.yaml -n home-server

apiVersion: k8up.io/v1
kind: Restore
metadata:
  name: manual-restore
  namespace: home-server
spec:
  snapshot: SNAPSHOT_ID
  restoreMethod:
    folder:
      claimName: PVC_NAME
  podSecurityContext:
    runAsUser: 0

  ## AWS S3 as backend for backups
  backend:
    s3:
      endpoint: https://s3.sa-east-1.amazonaws.com
      bucket: home-server-backups
      accessKeyIDSecretRef:
        name: k8up-secrets
        key: AWS_ACCESS_KEY_ID
      secretAccessKeySecretRef:
        name: k8up-secrets
        key: AWS_SECRET_ACCESS_KEY
    repoPasswordSecretRef:
      name: k8up-secrets
      key: RESTIC_REPOSITORY_PASSWORD

  ## Minio as backend for backups
  # backend:
  #   s3:
  #     endpoint: http://home-server-minio.home-server:9000
  #     bucket: backups
  #     accessKeyIDSecretRef:
  #       name: home-server-minio
  #       key: root-user
  #     secretAccessKeySecretRef:
  #       name: home-server-minio
  #       key: root-password
  #   repoPasswordSecretRef:
  #     name: k8up-secrets
  #     key: RESTIC_REPOSITORY_PASSWORD